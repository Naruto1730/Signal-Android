name: Signal Compiler

on:
  push:
    branches:
      - 'main'
      - '7.**'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:
    name: Build APKs
    runs-on: ubuntu-latest-8-cores
    outputs:
      short_sha: ${{ steps.set_sha.outputs.short_sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Run Lint
        run: ./gradlew lint

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Build Debug & Release APKs
        run: ./gradlew assembleDebug assembleRelease

      - name: Set short SHA
        id: set_sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Rename Release APK
        run: |
          mv app/build/outputs/apk/release/app-release.apk \
             app/build/outputs/apk/release/app-release-${{ steps.set_sha.outputs.short_sha }}.apk

      - name: Upload APKs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: signal-apks-${{ steps.set_sha.outputs.short_sha }}
          path: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/release/app-release-${{ steps.set_sha.outputs.short_sha }}.apk

      - name: Archive reports if build fails
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: '*/build/reports'

  sendToTelegram:
    name: Send APKs to Telegram
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: signal-apks-${{ needs.build.outputs.short_sha }}
          path: ./downloaded-apk

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Telethon
        run: pip install telethon

      - name: Get Git Commit Info
        run: |
          echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: Send APK to Telegram
        env:
          API_ID: ${{ secrets.TELEGRAM_API_ID }}
          API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TOPIC_ID: ${{ secrets.TELEGRAM_TOPIC_ID }}
          APK_PATH: ./downloaded-apk/app-release-${{ needs.build.outputs.short_sha }}.apk
        run: |
          python ./.github/workflows/deploy_artifacts.py
        continue-on-error: true
